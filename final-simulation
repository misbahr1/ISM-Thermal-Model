#!/usr/bin/env python3

import thermalmodel.thermalmodel as tm
import thermalmodel.links as links

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                Model description
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# model_description = [

#     (  # HSN
#         'Battery',  # HSN name
#         {  # HSN parameters
#             'mass': 10,
#             'heatCapacity': 20,
#             'heatGeneration': 0,
#             'temperature': 22,
#         },
#         [  # list of attached IFN
#             (
#                 'BAT-top',  # IFN name
#                 {  # IFN parameters
#                     'emissivity': 10,
#                     'absorptivity': 0,
#                 },
#                 [ ]  # links to other IFN
#             ),
#             (
#                 'BAT-bottom',
#                 {
#                     'emissivity': 10,
#                     'absorptivity': 0,
#                 },
#                 [ ]
#             ),
#             (
#                 'BAT-front',
#                 {
#                     'emissivity': 10,
#                     'absorptivity': 0,
#                 },
#                 [ ]
#             ),
#         ]
#     ),

#     (
#         'BoardComputer',
#         {
#             'mass': 5,
#             'heatCapacity': 8,
#             # heat generation is assumed 0 if not specified
#             'temperature': 21.2,
#         },
#         [
#             (
#                 'BC-bottom',
#                 {
#                     'emissivity': 10,
#                     'absorptivity': 0.4,
#                 },
#                 [
#                     (
#                         'BC-BAT-top', ('Battery', 'BAT-top'),
#                         [
#                             links.RadiationLink,
#                             links.ConductionLink,
#                             links.ContactLink,
#                         ],
#                         {
#                             'radiationArea1': 12.4,  # used by radiation calculations
#                             'radiationArea2': 2.4,   # used by radiation calculations
#                             'viewingFactor': 2.4,    # used by radiation calculations
#                             'contactArea': 20,       # used by contact calculations
#                             'resistance': 4.2,       # used by contact calculations
#                             'conductionArea': 8.51,  # used by conduction calculations
#                             'conductivity': 3.8,     # used by conduction calculations
#                             'length': 0.4,           # used by conduction calculations
#                         }
#                     ),
#                     (
#                         'BC-BAT-bottom', ('Battery', 'BAT-bottom'),
#                         [
#                             links.ContactLink,
#                         ],
#                         {
#                             'contactArea': 5.2,
#                             'resistance': 4.2,
#                         }
#                     ),
#                     (
#                         'BC-BAT-front', ('Battery', 'BAT-front'),
#                         [
#                             links.ConductionLink,
#                         ],
#                         {
#                             'conductionArea': 8.51,
#                             'conductivity': 3.8,
#                             'length': 0.4,
#                         }
#                     ),
#                 ]
#             ),
#         ]
#     ),

# ]

model_description = [

    (  # HSN
        'Antenna-Plate',  # HSN name
        {  # HSN parameters
            'mass': 0.01,
            'heatCapacity': 887,
            'heatGeneration': 0,
            'temperature': 22,
        },
        [  # list of attached IFN
            (
                'Antenna-Plate-bottom',  # IFN name
                {  # IFN parameters
                    'emissivity': 0.045,
                    'absorptivity': 0,
                },
            ),
        ]
    ),

    (
        'SSI',
        {
            'mass': 0.01,
            'heatCapacity': 887,
            # heat generation is assumed 0 if not specified
            'temperature': 22,
        },
        [
            (
                'SSI-top',
                {
                    'emissivity': 0.045,
                    'absorptivity': 0,
                },
                [
                    (
                        'SSI-Antenna-Plate-bottom', ('Antenna-Plate', 'Antenna-Plate-bottom'),
                        [
                            links.ContactLink,
                        ],
                        {
                            'contactArea': 0.003,       # used by contact calculations
                            'resistance': 0.05,         # used by contact calculations
                        }
                    ),
                ]
            ),
        ]
    ),

]


model_description = [

    (  # HSN
        'SSI',  # HSN name
        {  # HSN parameters
            'mass': 0.01,
            'heatCapacity': 887,
            'heatGeneration': 0,
            'temperature': 22,
        },
        [  # list of attached IFN
            (
                'SSI-side',  # IFN name
                {  # IFN parameters
                    'emissivity': 0.045,
                    'absorptivity': 0,
                },
            ),
        ]
    ),

    (
        'MS-Z+',
        {
            'mass': 0.03,
            'heatCapacity': 887,
            # heat generation is assumed 0 if not specified
            'temperature': 22,
        },
        [
            (
                'MS-Z+-inner',
                {
                    'emissivity': 0.045,
                    'absorptivity': 0,
                },
                [
                    (
                        'MS-Z+-SSI-side', ('SSI', 'SSI-side'),
                        [
                            links.ContactLink,
                        ],
                        {
                            'contactArea': 0.000108,       # used by contact calculations
                            'resistance': 0.05,            # used by contact calculations
                        }
                    ),
                ]
            ),
        ]
    ),

]



# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                      Create ThermalModel simulation class
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

thermalmodel = tm.ThermalModel(
    simulation_duration=0.1666 * 60,  # seconds
    timestep=1,  # seconds
    model_description=model_description,
)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                 Run Simulation
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

thermalmodel.simulate()
# thermalmodel.save()
